@model NetC.JuniorDeveloperExam.Web.ViewModels.BlogViewModel

@helper PrintComments(List<NetC.JuniorDeveloperExam.Web.Models.Comment> comments, int parentCommentPostion)
{
    for (var i = 0; i < comments.Count(); i++)
    {
        <div class="media mb-4">
            <img class="d-flex mr-3 rounded-circle user-avatar" src="https://eu.ui-avatars.com/api/?name=@comments[i].Name.Replace(' ', '+')" alt="@comments[i].Name">
            <div class="media-body">
                <h5 class="mt-0">
                    @comments[i].Name <small><em>@comments[i].Date.ToString("MMMM d, yyyy - H:mm")</em></small>
                    <a href="#!" onclick="ToggleReply('@($"{i}.{parentCommentPostion}")')"><span class="small"> reply</span></a>
                </h5>
                @comments[i].Message
            </div>
        </div>

        @PrintCommentForm($"{i}.{parentCommentPostion}", comments[i].Id, true)


        if (comments[i].Comments != null && comments[i].Comments.Count() > 0)
        {
            <div class="ml-4">
                @PrintComments(comments[i].Comments, i)
            </div>
        }

    }
}

@helper PrintCommentForm(string id, Guid? parentId, bool hidden)
{
    using (Html.BeginForm("Comment", "Blog", FormMethod.Post, new { id = id , style = hidden ? "display:none;" : "" }))
    {
        @Html.HiddenFor(m => m.Blog.Id)
        @Html.HiddenFor(m => m.ParentId, new { Value = parentId })

        <div class="card my-4">
            <h5 class="card-header">Leave a Reply:</h5>
            <div class="card-body">
                <div class="form-row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.NewComment.Name)
                        @Html.TextBoxFor(m => m.NewComment.Name, new { Class = "form-control", placeholder = "Name", type = "text" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.NewComment.EmailAddress)
                        @Html.TextBoxFor(m => m.NewComment.EmailAddress, new { Class = "form-control", placeholder = "Email Address", type = "email" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.NewComment.Message)
                    @Html.TextAreaFor(m => m.NewComment.Message, new { Class = "form-control", rows = "3" })
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </div>
        </div>
    }
}

<div class="container">
    <div class="row">

        <!-- Blog post content -->
        <div class="col-lg-12">

            <!-- Title -->
            <h1 class="mt-4">@Model.Blog.Title</h1>

            <hr>

            <!-- Date/Time -->
            <p>Posted on @Model.Blog.Date.ToString("MMMM d, yyyy")</p>

            <hr>

            <!-- Preview Image -->
            <img class="img-fluid rounded" src="@Model.Blog.Image" alt="@Model.Blog.Title">

            <hr>

            <!-- Post Content -->
            @Html.Raw(Model.Blog.HtmlContent)

            <hr>

            <!-- Blog post comment form -->

            @PrintCommentForm("", null, false)

            <!-- Blog post comments -->
            @if (Model.Blog.Comments != null && Model.Blog.Comments.Count() > 0)
            {
                @PrintComments(Model.Blog.Comments, -1);
            }


        </div>
    </div>
</div>

<script type="text/javascript">
    function ToggleReply(id) {
        const elem = document.getElementById(id);

        if (elem.style.display === "none") {
            elem.style.display = "block";
        } else {
            elem.style.display = "none";
        }
    }
</script>